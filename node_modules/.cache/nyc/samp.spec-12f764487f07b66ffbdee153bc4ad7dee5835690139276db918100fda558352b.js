function cov_6k9hxa5hu(){var path="/home/teja/saiteja/minor_pro/test/samp.spec.js";var hash="7f2c5017866433be0bdb70d12873fb895e40d5f0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/teja/saiteja/minor_pro/test/samp.spec.js",statementMap:{"0":{start:{line:1,column:13},end:{line:1,column:28}},"1":{start:{line:2,column:17},end:{line:2,column:37}},"2":{start:{line:3,column:14},end:{line:3,column:30}},"3":{start:{line:4,column:15},end:{line:4,column:26}},"4":{start:{line:5,column:12},end:{line:5,column:30}},"5":{start:{line:6,column:0},end:{line:6,column:19}},"6":{start:{line:7,column:30},end:{line:7,column:69}},"7":{start:{line:9,column:0},end:{line:33,column:3}},"8":{start:{line:12,column:4},end:{line:20,column:7}},"9":{start:{line:13,column:8},end:{line:13,column:40}},"10":{start:{line:21,column:4},end:{line:23,column:6}},"11":{start:{line:22,column:8},end:{line:22,column:26}},"12":{start:{line:24,column:4},end:{line:32,column:6}},"13":{start:{line:25,column:8},end:{line:27,column:11}},"14":{start:{line:29,column:24},end:{line:29,column:49}},"15":{start:{line:30,column:8},end:{line:30,column:31}},"16":{start:{line:31,column:8},end:{line:31,column:35}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:30},end:{line:9,column:31}},loc:{start:{line:9,column:36},end:{line:33,column:1}},line:9},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:15},end:{line:12,column:16}},loc:{start:{line:12,column:21},end:{line:20,column:5}},line:12},"2":{name:"(anonymous_2)",decl:{start:{line:21,column:14},end:{line:21,column:15}},loc:{start:{line:21,column:18},end:{line:23,column:5}},line:21},"3":{name:"(anonymous_3)",decl:{start:{line:24,column:72},end:{line:24,column:73}},loc:{start:{line:24,column:84},end:{line:32,column:5}},line:24}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},f:{"0":0,"1":0,"2":0,"3":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"7f2c5017866433be0bdb70d12873fb895e40d5f0"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_6k9hxa5hu=function(){return actualCoverage;};}return actualCoverage;}cov_6k9hxa5hu();const chai=(cov_6k9hxa5hu().s[0]++,require('chai'));const chaiHttp=(cov_6k9hxa5hu().s[1]++,require('chai-http'));const sinon=(cov_6k9hxa5hu().s[2]++,require('sinon'));const expect=(cov_6k9hxa5hu().s[3]++,chai.expect);const AWS=(cov_6k9hxa5hu().s[4]++,require('aws-sdk'));cov_6k9hxa5hu().s[5]++;chai.use(chaiHttp);const{createLiveSession}=(cov_6k9hxa5hu().s[6]++,require('../controller/liveController'));// Assuming your function is in a file named 'recogRoutes.js'
cov_6k9hxa5hu().s[7]++;describe('createLiveSession',()=>{cov_6k9hxa5hu().f[0]++;let sandbox;cov_6k9hxa5hu().s[8]++;beforeEach(()=>{cov_6k9hxa5hu().f[1]++;cov_6k9hxa5hu().s[9]++;sandbox=sinon.createSandbox();// Mocking AWS Rekognition service
// rekognitionMock = {
//     createFaceLivenessSession: sinon.stub().returnsThis(),
//     promise: sinon.stub().resolves({ SessionId: 'mockSessionId' })
// };
});cov_6k9hxa5hu().s[10]++;afterEach(()=>{cov_6k9hxa5hu().f[2]++;cov_6k9hxa5hu().s[11]++;sandbox.restore();});cov_6k9hxa5hu().s[12]++;it('should call createFaceLivenessSession with correct parameters',async()=>{cov_6k9hxa5hu().f[3]++;cov_6k9hxa5hu().s[13]++;sandbox.stub(AWS,'Rekognition').returns({createFaceLivenessSession:sandbox.stub().resolves({SessionId:'mockSessionId'})});const sessionId=(cov_6k9hxa5hu().s[14]++,await createLiveSession());cov_6k9hxa5hu().s[15]++;console.log(sessionId);cov_6k9hxa5hu().s[16]++;expect(sessionId).to.exist;});});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfNms5aHhhNWh1IiwiYWN0dWFsQ292ZXJhZ2UiLCJjaGFpIiwicyIsInJlcXVpcmUiLCJjaGFpSHR0cCIsInNpbm9uIiwiZXhwZWN0IiwiQVdTIiwidXNlIiwiY3JlYXRlTGl2ZVNlc3Npb24iLCJkZXNjcmliZSIsImYiLCJzYW5kYm94IiwiYmVmb3JlRWFjaCIsImNyZWF0ZVNhbmRib3giLCJhZnRlckVhY2giLCJyZXN0b3JlIiwiaXQiLCJzdHViIiwicmV0dXJucyIsImNyZWF0ZUZhY2VMaXZlbmVzc1Nlc3Npb24iLCJyZXNvbHZlcyIsIlNlc3Npb25JZCIsInNlc3Npb25JZCIsImNvbnNvbGUiLCJsb2ciLCJ0byIsImV4aXN0Il0sInNvdXJjZXMiOlsic2FtcC5zcGVjLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNoYWkgPSByZXF1aXJlKCdjaGFpJyk7XG5jb25zdCBjaGFpSHR0cCA9IHJlcXVpcmUoJ2NoYWktaHR0cCcpO1xuY29uc3Qgc2lub24gPSByZXF1aXJlKCdzaW5vbicpO1xuY29uc3QgZXhwZWN0ID0gY2hhaS5leHBlY3Q7XG5jb25zdCBBV1MgPSByZXF1aXJlKCdhd3Mtc2RrJyk7XG5jaGFpLnVzZShjaGFpSHR0cCk7XG5jb25zdCB7IGNyZWF0ZUxpdmVTZXNzaW9uIH0gPSByZXF1aXJlKCcuLi9jb250cm9sbGVyL2xpdmVDb250cm9sbGVyJyk7IC8vIEFzc3VtaW5nIHlvdXIgZnVuY3Rpb24gaXMgaW4gYSBmaWxlIG5hbWVkICdyZWNvZ1JvdXRlcy5qcydcblxuZGVzY3JpYmUoJ2NyZWF0ZUxpdmVTZXNzaW9uJywgKCkgPT4ge1xuICAgIGxldCBzYW5kYm94O1xuXG4gICAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgICAgIHNhbmRib3ggPSBzaW5vbi5jcmVhdGVTYW5kYm94KCk7XG4gICAgICAgIC8vIE1vY2tpbmcgQVdTIFJla29nbml0aW9uIHNlcnZpY2VcbiAgICAgICAgLy8gcmVrb2duaXRpb25Nb2NrID0ge1xuICAgICAgICAvLyAgICAgY3JlYXRlRmFjZUxpdmVuZXNzU2Vzc2lvbjogc2lub24uc3R1YigpLnJldHVybnNUaGlzKCksXG4gICAgICAgIC8vICAgICBwcm9taXNlOiBzaW5vbi5zdHViKCkucmVzb2x2ZXMoeyBTZXNzaW9uSWQ6ICdtb2NrU2Vzc2lvbklkJyB9KVxuICAgICAgICAvLyB9O1xuIFxuICAgIH0pO1xuICAgIGFmdGVyRWFjaCgoKT0+e1xuICAgICAgICBzYW5kYm94LnJlc3RvcmUoKTtcbiAgICB9KVxuICAgIGl0KCdzaG91bGQgY2FsbCBjcmVhdGVGYWNlTGl2ZW5lc3NTZXNzaW9uIHdpdGggY29ycmVjdCBwYXJhbWV0ZXJzJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICBzYW5kYm94LnN0dWIoQVdTLCAnUmVrb2duaXRpb24nKS5yZXR1cm5zKHtcbiAgICAgICAgICAgIGNyZWF0ZUZhY2VMaXZlbmVzc1Nlc3Npb246IHNhbmRib3guc3R1YigpLnJlc29sdmVzKHsgU2Vzc2lvbklkOiAnbW9ja1Nlc3Npb25JZCcgfSlcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3Qgc2Vzc2lvbklkPWF3YWl0IGNyZWF0ZUxpdmVTZXNzaW9uKCk7XG4gICAgICAgIGNvbnNvbGUubG9nKHNlc3Npb25JZCk7XG4gICAgICAgIGV4cGVjdChzZXNzaW9uSWQpLnRvLmV4aXN0O1xuICAgIH0pXG59KTsiXSwibWFwcGluZ3MiOiJzckVBZVk7QUFBQUEsYUFBQSxTQUFBQSxDQUFBLFNBQUFDLGNBQUEsV0FBQUEsY0FBQSxFQUFBRCxhQUFBLEdBZlosS0FBTSxDQUFBRSxJQUFJLEVBQUFGLGFBQUEsR0FBQUcsQ0FBQSxNQUFHQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQzVCLEtBQU0sQ0FBQUMsUUFBUSxFQUFBTCxhQUFBLEdBQUFHLENBQUEsTUFBR0MsT0FBTyxDQUFDLFdBQVcsQ0FBQyxFQUNyQyxLQUFNLENBQUFFLEtBQUssRUFBQU4sYUFBQSxHQUFBRyxDQUFBLE1BQUdDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFDOUIsS0FBTSxDQUFBRyxNQUFNLEVBQUFQLGFBQUEsR0FBQUcsQ0FBQSxNQUFHRCxJQUFJLENBQUNLLE1BQU0sRUFDMUIsS0FBTSxDQUFBQyxHQUFHLEVBQUFSLGFBQUEsR0FBQUcsQ0FBQSxNQUFHQyxPQUFPLENBQUMsU0FBUyxDQUFDLEVBQUNKLGFBQUEsR0FBQUcsQ0FBQSxNQUMvQkQsSUFBSSxDQUFDTyxHQUFHLENBQUNKLFFBQVEsQ0FBQyxDQUNsQixLQUFNLENBQUVLLGlCQUFrQixDQUFDLEVBQUFWLGFBQUEsR0FBQUcsQ0FBQSxNQUFHQyxPQUFPLENBQUMsOEJBQThCLENBQUMsRUFBRTtBQUFBSixhQUFBLEdBQUFHLENBQUEsTUFFdkVRLFFBQVEsQ0FBQyxtQkFBbUIsQ0FBRSxJQUFNLENBQUFYLGFBQUEsR0FBQVksQ0FBQSxNQUNoQyxHQUFJLENBQUFDLE9BQU8sQ0FBQ2IsYUFBQSxHQUFBRyxDQUFBLE1BRVpXLFVBQVUsQ0FBQyxJQUFNLENBQUFkLGFBQUEsR0FBQVksQ0FBQSxNQUFBWixhQUFBLEdBQUFHLENBQUEsTUFDYlUsT0FBTyxDQUFHUCxLQUFLLENBQUNTLGFBQWEsQ0FBQyxDQUFDLENBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFSixDQUFDLENBQUMsQ0FBQ2YsYUFBQSxHQUFBRyxDQUFBLE9BQ0hhLFNBQVMsQ0FBQyxJQUFJLENBQUFoQixhQUFBLEdBQUFZLENBQUEsTUFBQVosYUFBQSxHQUFBRyxDQUFBLE9BQ1ZVLE9BQU8sQ0FBQ0ksT0FBTyxDQUFDLENBQUMsQ0FDckIsQ0FBQyxDQUFDLENBQUFqQixhQUFBLEdBQUFHLENBQUEsT0FDRmUsRUFBRSxDQUFDLCtEQUErRCxDQUFFLFNBQVksQ0FBQWxCLGFBQUEsR0FBQVksQ0FBQSxNQUFBWixhQUFBLEdBQUFHLENBQUEsT0FDNUVVLE9BQU8sQ0FBQ00sSUFBSSxDQUFDWCxHQUFHLENBQUUsYUFBYSxDQUFDLENBQUNZLE9BQU8sQ0FBQyxDQUNyQ0MseUJBQXlCLENBQUVSLE9BQU8sQ0FBQ00sSUFBSSxDQUFDLENBQUMsQ0FBQ0csUUFBUSxDQUFDLENBQUVDLFNBQVMsQ0FBRSxlQUFnQixDQUFDLENBQ3JGLENBQUMsQ0FBQyxDQUVGLEtBQU0sQ0FBQUMsU0FBUyxFQUFBeEIsYUFBQSxHQUFBRyxDQUFBLE9BQUMsS0FBTSxDQUFBTyxpQkFBaUIsQ0FBQyxDQUFDLEVBQUNWLGFBQUEsR0FBQUcsQ0FBQSxPQUMxQ3NCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRixTQUFTLENBQUMsQ0FBQ3hCLGFBQUEsR0FBQUcsQ0FBQSxPQUN2QkksTUFBTSxDQUFDaUIsU0FBUyxDQUFDLENBQUNHLEVBQUUsQ0FBQ0MsS0FBSyxDQUM5QixDQUFDLENBQUMsQ0FDTixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=